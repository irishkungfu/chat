// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ThemeProvider
        theme={
          Object {
            "main": "mediumseagreen",
          }
        }
      >
        <Provider
          store={
            MessageListModel {
              "awaitingMessage": "done",
              "chatHeaderHeight": 50,
              "chatInputHeight": 50,
              "messages": Array [],
              "newMessage": "",
              Symbol(mobx did run lazy initializers): true,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "MessageListModel@1.keys",
                  "observers": Set {},
                },
                "name": "MessageListModel@1",
                "target": [Circular],
                "values": Map {
                  "messages" => Array [],
                  "newMessage" => "",
                  "awaitingMessage" => "done",
                  "chatInputHeight" => 50,
                  "chatHeaderHeight" => 50,
                },
              },
            }
          }
        >
          <ChatWrapper
            store={
              MessageListModel {
                "awaitingMessage": "done",
                "chatHeaderHeight": 50,
                "chatInputHeight": 50,
                "messages": Array [],
                "newMessage": "",
                Symbol(mobx did run lazy initializers): true,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "MessageListModel@1.keys",
                    "observers": Set {},
                  },
                  "name": "MessageListModel@1",
                  "target": [Circular],
                  "values": Map {
                    "messages" => Array [],
                    "newMessage" => "",
                    "awaitingMessage" => "done",
                    "chatInputHeight" => 50,
                    "chatHeaderHeight" => 50,
                  },
                },
              }
            }
          />
        </Provider>
      </ThemeProvider>,
      "className": "App",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Provider
          store={
            MessageListModel {
              "awaitingMessage": "done",
              "chatHeaderHeight": 50,
              "chatInputHeight": 50,
              "messages": Array [],
              "newMessage": "",
              Symbol(mobx did run lazy initializers): true,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "MessageListModel@1.keys",
                  "observers": Set {},
                },
                "name": "MessageListModel@1",
                "target": [Circular],
                "values": Map {
                  "messages" => Array [],
                  "newMessage" => "",
                  "awaitingMessage" => "done",
                  "chatInputHeight" => 50,
                  "chatHeaderHeight" => 50,
                },
              },
            }
          }
        >
          <ChatWrapper
            store={
              MessageListModel {
                "awaitingMessage": "done",
                "chatHeaderHeight": 50,
                "chatInputHeight": 50,
                "messages": Array [],
                "newMessage": "",
                Symbol(mobx did run lazy initializers): true,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "MessageListModel@1.keys",
                    "observers": Set {},
                  },
                  "name": "MessageListModel@1",
                  "target": [Circular],
                  "values": Map {
                    "messages" => Array [],
                    "newMessage" => "",
                    "awaitingMessage" => "done",
                    "chatInputHeight" => 50,
                    "chatHeaderHeight" => 50,
                  },
                },
              }
            }
          />
        </Provider>,
        "theme": Object {
          "main": "mediumseagreen",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ChatWrapper
            store={
              MessageListModel {
                "awaitingMessage": "done",
                "chatHeaderHeight": 50,
                "chatInputHeight": 50,
                "messages": Array [],
                "newMessage": "",
                Symbol(mobx did run lazy initializers): true,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "MessageListModel@1.keys",
                    "observers": Set {},
                  },
                  "name": "MessageListModel@1",
                  "target": [Circular],
                  "values": Map {
                    "messages" => Array [],
                    "newMessage" => "",
                    "awaitingMessage" => "done",
                    "chatInputHeight" => 50,
                    "chatHeaderHeight" => 50,
                  },
                },
              }
            }
          />,
          "store": MessageListModel {
            "awaitingMessage": "done",
            "chatHeaderHeight": 50,
            "chatInputHeight": 50,
            "messages": Array [],
            "newMessage": "",
            Symbol(mobx did run lazy initializers): true,
            Symbol(mobx administration): ObservableObjectAdministration$$1 {
              "defaultEnhancer": [Function],
              "keysAtom": Atom$$1 {
                "diffValue": 0,
                "isBeingObserved": false,
                "isPendingUnobservation": false,
                "lastAccessedBy": 0,
                "lowestObserverState": 2,
                "name": "MessageListModel@1.keys",
                "observers": Set {},
              },
              "name": "MessageListModel@1",
              "target": [Circular],
              "values": Map {
                "messages" => Array [],
                "newMessage" => "",
                "awaitingMessage" => "done",
                "chatInputHeight" => 50,
                "chatHeaderHeight" => 50,
              },
            },
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "store": MessageListModel {
              "awaitingMessage": "done",
              "chatHeaderHeight": 50,
              "chatInputHeight": 50,
              "messages": Array [],
              "newMessage": "",
              Symbol(mobx did run lazy initializers): true,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "MessageListModel@1.keys",
                  "observers": Set {},
                },
                "name": "MessageListModel@1",
                "target": [Circular],
                "values": Map {
                  "messages" => Array [],
                  "newMessage" => "",
                  "awaitingMessage" => "done",
                  "chatInputHeight" => 50,
                  "chatHeaderHeight" => 50,
                },
              },
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ThemeProvider
          theme={
            Object {
              "main": "mediumseagreen",
            }
          }
        >
          <Provider
            store={
              MessageListModel {
                "awaitingMessage": "done",
                "chatHeaderHeight": 50,
                "chatInputHeight": 50,
                "messages": Array [],
                "newMessage": "",
                Symbol(mobx did run lazy initializers): true,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "MessageListModel@1.keys",
                    "observers": Set {},
                  },
                  "name": "MessageListModel@1",
                  "target": [Circular],
                  "values": Map {
                    "messages" => Array [],
                    "newMessage" => "",
                    "awaitingMessage" => "done",
                    "chatInputHeight" => 50,
                    "chatHeaderHeight" => 50,
                  },
                },
              }
            }
          >
            <ChatWrapper
              store={
                MessageListModel {
                  "awaitingMessage": "done",
                  "chatHeaderHeight": 50,
                  "chatInputHeight": 50,
                  "messages": Array [],
                  "newMessage": "",
                  Symbol(mobx did run lazy initializers): true,
                  Symbol(mobx administration): ObservableObjectAdministration$$1 {
                    "defaultEnhancer": [Function],
                    "keysAtom": Atom$$1 {
                      "diffValue": 0,
                      "isBeingObserved": false,
                      "isPendingUnobservation": false,
                      "lastAccessedBy": 0,
                      "lowestObserverState": 2,
                      "name": "MessageListModel@1.keys",
                      "observers": Set {},
                    },
                    "name": "MessageListModel@1",
                    "target": [Circular],
                    "values": Map {
                      "messages" => Array [],
                      "newMessage" => "",
                      "awaitingMessage" => "done",
                      "chatInputHeight" => 50,
                      "chatHeaderHeight" => 50,
                    },
                  },
                }
              }
            />
          </Provider>
        </ThemeProvider>,
        "className": "App",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Provider
            store={
              MessageListModel {
                "awaitingMessage": "done",
                "chatHeaderHeight": 50,
                "chatInputHeight": 50,
                "messages": Array [],
                "newMessage": "",
                Symbol(mobx did run lazy initializers): true,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "MessageListModel@1.keys",
                    "observers": Set {},
                  },
                  "name": "MessageListModel@1",
                  "target": [Circular],
                  "values": Map {
                    "messages" => Array [],
                    "newMessage" => "",
                    "awaitingMessage" => "done",
                    "chatInputHeight" => 50,
                    "chatHeaderHeight" => 50,
                  },
                },
              }
            }
          >
            <ChatWrapper
              store={
                MessageListModel {
                  "awaitingMessage": "done",
                  "chatHeaderHeight": 50,
                  "chatInputHeight": 50,
                  "messages": Array [],
                  "newMessage": "",
                  Symbol(mobx did run lazy initializers): true,
                  Symbol(mobx administration): ObservableObjectAdministration$$1 {
                    "defaultEnhancer": [Function],
                    "keysAtom": Atom$$1 {
                      "diffValue": 0,
                      "isBeingObserved": false,
                      "isPendingUnobservation": false,
                      "lastAccessedBy": 0,
                      "lowestObserverState": 2,
                      "name": "MessageListModel@1.keys",
                      "observers": Set {},
                    },
                    "name": "MessageListModel@1",
                    "target": [Circular],
                    "values": Map {
                      "messages" => Array [],
                      "newMessage" => "",
                      "awaitingMessage" => "done",
                      "chatInputHeight" => 50,
                      "chatHeaderHeight" => 50,
                    },
                  },
                }
              }
            />
          </Provider>,
          "theme": Object {
            "main": "mediumseagreen",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ChatWrapper
              store={
                MessageListModel {
                  "awaitingMessage": "done",
                  "chatHeaderHeight": 50,
                  "chatInputHeight": 50,
                  "messages": Array [],
                  "newMessage": "",
                  Symbol(mobx did run lazy initializers): true,
                  Symbol(mobx administration): ObservableObjectAdministration$$1 {
                    "defaultEnhancer": [Function],
                    "keysAtom": Atom$$1 {
                      "diffValue": 0,
                      "isBeingObserved": false,
                      "isPendingUnobservation": false,
                      "lastAccessedBy": 0,
                      "lowestObserverState": 2,
                      "name": "MessageListModel@1.keys",
                      "observers": Set {},
                    },
                    "name": "MessageListModel@1",
                    "target": [Circular],
                    "values": Map {
                      "messages" => Array [],
                      "newMessage" => "",
                      "awaitingMessage" => "done",
                      "chatInputHeight" => 50,
                      "chatHeaderHeight" => 50,
                    },
                  },
                }
              }
            />,
            "store": MessageListModel {
              "awaitingMessage": "done",
              "chatHeaderHeight": 50,
              "chatInputHeight": 50,
              "messages": Array [],
              "newMessage": "",
              Symbol(mobx did run lazy initializers): true,
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "MessageListModel@1.keys",
                  "observers": Set {},
                },
                "name": "MessageListModel@1",
                "target": [Circular],
                "values": Map {
                  "messages" => Array [],
                  "newMessage" => "",
                  "awaitingMessage" => "done",
                  "chatInputHeight" => 50,
                  "chatHeaderHeight" => 50,
                },
              },
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "store": MessageListModel {
                "awaitingMessage": "done",
                "chatHeaderHeight": 50,
                "chatInputHeight": 50,
                "messages": Array [],
                "newMessage": "",
                Symbol(mobx did run lazy initializers): true,
                Symbol(mobx administration): ObservableObjectAdministration$$1 {
                  "defaultEnhancer": [Function],
                  "keysAtom": Atom$$1 {
                    "diffValue": 0,
                    "isBeingObserved": false,
                    "isPendingUnobservation": false,
                    "lastAccessedBy": 0,
                    "lowestObserverState": 2,
                    "name": "MessageListModel@1.keys",
                    "observers": Set {},
                  },
                  "name": "MessageListModel@1",
                  "target": [Circular],
                  "values": Map {
                    "messages" => Array [],
                    "newMessage" => "",
                    "awaitingMessage" => "done",
                    "chatInputHeight" => 50,
                    "chatHeaderHeight" => 50,
                  },
                },
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
